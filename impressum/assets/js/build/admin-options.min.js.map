{"version":3,"file":"admin-options.min.js","mappings":"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","sources":["webpack://impressum/./assets/js/admin-options.js"],"sourcesContent":["/* eslint-disable no-var */\n/**\n * JavaScript functions for the admin options page.\n *\n * @author\tEpiphyt\n * @license\tGPL2\n */\n\n// all fields that should be be checked by there value\nvar fieldsToCheck = [\n\t'address',\n\t'contact_form_page',\n\t'country',\n\t'email',\n\t'name',\n\t'phone',\n];\n\n// at least one of the dependent fields must have a value when the current field\n// does not\nconst fieldDependencies = {\n\tcontact_form_page: [ 'phone' ],\n\tphone: [ 'contact_form_page' ],\n};\n\n/* global imprintL10n */\ndocument.addEventListener( 'DOMContentLoaded', function () {\n\tconst businessId = document.getElementById( 'business_id' );\n\tconst businessIdRow = document.querySelector( '.impressum_business_id' );\n\tvar countrySelect = document.getElementById( 'country' );\n\tvar legalEntitySelect = document.getElementById( 'legal_entity' );\n\tvar pressLawCheckbox = document.getElementById( 'press_law_checkbox' );\n\tvar pressLawCheckboxRow = document.querySelector(\n\t\t'.impressum_press_law_checkbox'\n\t);\n\tvar pressLawInputRow = document.querySelector( '.impressum_press_law' );\n\tvar vatId = document.getElementById( 'vat_id' );\n\n\t// function calls\n\tfor ( var i = 0; i < fieldsToCheck.length; i++ ) {\n\t\tcheckFieldLength(\n\t\t\tdocument.getElementById( fieldsToCheck[ i ] ),\n\t\t\tfieldsToCheck[ i ]\n\t\t);\n\t}\n\n\tif ( countrySelect ) {\n\t\tcheckCountry();\n\t}\n\n\tif ( legalEntitySelect ) {\n\t\tcheckLegalEntity();\n\t}\n\n\tif ( pressLawCheckbox && pressLawInputRow ) {\n\t\tcheckPressLaw();\n\t}\n\n\t// check formal vat id validity\n\tif ( businessId ) {\n\t\t// use keyup instead of input to match also autocomplete values\n\t\tbusinessId.addEventListener( 'keyup', ( event ) => {\n\t\t\tconst currentTarget = event.currentTarget;\n\t\t\t// replace any whitespaces\n\t\t\tconst regex = new RegExp( /[^A-Za-z0-9\\*\\+\\-]+/g );\n\n\t\t\tif ( regex.test( currentTarget.value ) ) {\n\t\t\t\tcurrentTarget.value = currentTarget.value.replace(\n\t\t\t\t\t/[^A-Za-z0-9\\*\\+\\-]+/g,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\t// use keyup instead of input to match also autocomplete values\n\t\tbusinessId.addEventListener(\n\t\t\t'keyup',\n\t\t\tdebounce( ( event ) => {\n\t\t\t\tconst currentTarget = event.target;\n\t\t\t\t// replace any whitespaces\n\t\t\t\tconst regex = new RegExp( /[^A-Za-z0-9\\*\\+\\-]+/g );\n\n\t\t\t\tif ( regex.test( currentTarget.value ) ) {\n\t\t\t\t\tcurrentTarget.value = currentTarget.value.replace(\n\t\t\t\t\t\t/[^A-Za-z0-9\\*\\+\\-]+/g,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// do the check\n\t\t\t\tif ( ! isValidBusinessIdFormat( currentTarget.value ) ) {\n\t\t\t\t\ttoggleMessage(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tbusinessId,\n\t\t\t\t\t\timprintL10n.businessIdErrorMessage\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttoggleMessage( true, businessId, '' );\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\t}\n\n\t// check formal vat id validity\n\tif ( vatId ) {\n\t\t// use keyup instead of input to match also autocomplete values\n\t\tvatId.addEventListener( 'keyup', ( event ) => {\n\t\t\tconst currentTarget = event.currentTarget;\n\t\t\t// replace any whitespaces\n\t\t\tconst regex = new RegExp( /[^A-Za-z0-9\\*\\+]+/g );\n\n\t\t\tif ( regex.test( currentTarget.value ) ) {\n\t\t\t\tcurrentTarget.value = currentTarget.value.replace(\n\t\t\t\t\t/[^A-Za-z0-9\\*\\+]+/g,\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\t\tvatId.addEventListener(\n\t\t\t'keyup',\n\t\t\tdebounce( ( event ) => {\n\t\t\t\tconst currentTarget = event.target;\n\t\t\t\t// replace any whitespaces\n\t\t\t\tconst regex = new RegExp( /[^A-Za-z0-9\\*\\+]+/g );\n\n\t\t\t\tif ( regex.test( currentTarget.value ) ) {\n\t\t\t\t\tcurrentTarget.value = currentTarget.value.replace(\n\t\t\t\t\t\t/[^A-Za-z0-9\\*\\+]+/g,\n\t\t\t\t\t\t''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// do the check\n\t\t\t\tif ( ! isValidVatIdFormat( currentTarget.value ) ) {\n\t\t\t\t\ttoggleMessage(\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tvatId,\n\t\t\t\t\t\timprintL10n.vatIdErrorMessage\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttoggleMessage( true, vatId, '' );\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Check given value of a field and show or hide a message.\n\t *\n\t * @param {Element} field     The field DOM element to check\n\t * @param {string}  fieldName The name of the field\n\t */\n\tfunction checkFieldLength( field, fieldName ) {\n\t\tconst snakeToCamel = ( str ) =>\n\t\t\tstr\n\t\t\t\t.toLowerCase()\n\t\t\t\t.replace( /([-_][a-z])/g, ( group ) =>\n\t\t\t\t\tgroup.toUpperCase().replace( '-', '' ).replace( '_', '' )\n\t\t\t\t);\n\t\tfieldName = snakeToCamel( fieldName );\n\t\tvar message = imprintL10n[ fieldName + 'ErrorMessage' ];\n\n\t\t// check on change or input\n\t\t[ 'change', 'input' ].forEach( ( eventName ) => {\n\t\t\tif ( ! field ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfield.addEventListener( eventName, ( event ) =>\n\t\t\t\tcheckFieldValue( event.currentTarget, fieldName, message )\n\t\t\t);\n\t\t} );\n\t}\n\n\t/**\n\t * Check field values for content.\n\t *\n\t * @param {HTMLElement} field     Field to check\n\t * @param {string}      fieldName Field name\n\t * @param {string}      message   Message to toggle\n\t */\n\tfunction checkFieldValue( field, fieldName, message ) {\n\t\tconst hideMessage =\n\t\t\tfield.value.length !== 0 || field?.placeholder?.length;\n\t\tconst dependenciesMet = checkFieldValueDependencies(\n\t\t\tfieldName,\n\t\t\thideMessage\n\t\t);\n\n\t\ttoggleMessage( hideMessage || dependenciesMet, field, message );\n\t}\n\n\t/**\n\t * Check whether the dependencies of a field met their value requirements.\n\t *\n\t * @param {string}  fieldName    Field name\n\t * @param {boolean} isCurrentMet Whether the current field met the requirements\n\t * @return {boolean} Whether the field dependencies all met\n\t */\n\tfunction checkFieldValueDependencies( fieldName, isCurrentMet ) {\n\t\tif ( ! fieldDependencies[ fieldName ] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const dependency of fieldDependencies[ fieldName ] ) {\n\t\t\tconst field = document.getElementById( dependency );\n\n\t\t\tif ( isCurrentMet ) {\n\t\t\t\ttoggleMessage( true, field );\n\t\t\t}\n\n\t\t\tif ( field.value.length !== 0 || field?.placeholder?.length ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check for given values of the country and show or hide elements.\n\t */\n\tfunction checkCountry() {\n\t\ttoggleFieldsByCountry( countrySelect.value, legalEntitySelect.value );\n\t\ttoggleFieldsByCountry( countrySelect.value, businessId.value );\n\n\t\t// check on select change\n\t\tcountrySelect.addEventListener( 'change', function ( event ) {\n\t\t\ttoggleFieldsByCountry(\n\t\t\t\tevent.currentTarget.value,\n\t\t\t\tlegalEntitySelect.value\n\t\t\t);\n\t\t\ttoggleFieldsByCountry(\n\t\t\t\tevent.currentTarget.value,\n\t\t\t\tbusinessId.value\n\t\t\t);\n\t\t} );\n\t}\n\n\t/**\n\t * Check for given values of the legal entity and show or hide elements.\n\t */\n\tfunction checkLegalEntity() {\n\t\t// check on page load\n\t\tvar message = imprintL10n.legalEntityErrorMessage;\n\t\tvar needProMessage =\n\t\t\tlegalEntitySelect.value === 'individual' ||\n\t\t\tlegalEntitySelect.value === 'self';\n\t\ttoggleMessage( needProMessage, legalEntitySelect, message );\n\n\t\t// check on select change\n\t\tlegalEntitySelect.addEventListener( 'change', function ( event ) {\n\t\t\tvar currentTarget = event.currentTarget;\n\n\t\t\tneedProMessage =\n\t\t\t\tcurrentTarget.value === 'individual' ||\n\t\t\t\tcurrentTarget.value === 'self';\n\t\t\ttoggleMessage( needProMessage, legalEntitySelect, message );\n\t\t} );\n\t}\n\n\t/**\n\t * Check if the user enabled the press law checkbox.\n\t */\n\tfunction checkPressLaw() {\n\t\t// return if there is no input row found\n\t\tif ( pressLawInputRow === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if checkbox is not checked\n\t\tif ( ! pressLawCheckbox.checked ) {\n\t\t\t// hide the input\n\t\t\tpressLawInputRow.style.display = 'none';\n\t\t}\n\n\t\t// on click on checkbox\n\t\tpressLawCheckbox.addEventListener( 'click', function ( event ) {\n\t\t\tvar currentTarget = event.currentTarget;\n\n\t\t\t// if checkbox is checked\n\t\t\tif ( currentTarget.checked ) {\n\t\t\t\t// remove inline style\n\t\t\t\tpressLawInputRow.removeAttribute( 'style' );\n\t\t\t} else {\n\t\t\t\t// hide the input\n\t\t\t\tpressLawInputRow.style.display = 'none';\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Check if business ID has a valid format.\n\t *\n\t * @param {string} value The value to check\n\t * @return\t{boolean} Whether business ID has valid format\n\t */\n\tfunction isValidBusinessIdFormat( value ) {\n\t\tconst regex = new RegExp( '^(|DE[0-9]{9}-[0-9]{5})$' );\n\n\t\treturn regex.test( value );\n\t}\n\n\t/**\n\t * Check if VAT ID has a valid format.\n\t *\n\t * @param {string} value The value to check\n\t * @return\t{boolean} True if VAT number is in valid format, false otherwise\n\t */\n\tfunction isValidVatIdFormat( value ) {\n\t\t// see: https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch04s21.html\n\t\t// modified to also allow * and + for Netherlands and empty values\n\t\tvar regex = new RegExp(\n\t\t\t'^(|ATU[0-9]{8}|BE0[0-9]{9}|BG[0-9]{9,10}|CY[0-9]{8}L|CZ[0-9]{8,10}|DE[0-9]{9}|DK[0-9]{8}|EE[0-9]{9}|(EL|GR)[0-9]{9}|ES[0-9A-Z][0-9]{7}[0-9A-Z]|FI[0-9]{8}|FR[0-9A-Z]{2}[0-9]{9}|GB([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|HU[0-9]{8}|IE[0-9]S[0-9]{5}L|IT[0-9]{11}|LT([0-9]{9}|[0-9]{12})|LU[0-9]{8}|LV[0-9]{11}|MT[0-9]{8}|NL[0-9+*]{9}B[0-9]{2}|PL[0-9]{10}|PT[0-9]{9}|RO[0-9]{2,10}|SE[0-9]{12}|SI[0-9]{8}|SK[0-9]{10})$'\n\t\t);\n\n\t\treturn regex.test( value );\n\t}\n\n\t/**\n\t * Toggle fields by selected country.\n\t *\n\t * @param {string} country     The selected country\n\t * @param {string} legalEntity The selected legal entity\n\t */\n\t// eslint-disable-next-line no-unused-vars\n\tfunction toggleFieldsByCountry( country, legalEntity ) {\n\t\tlet businessIdOrVatIdMessageContainerBusiness =\n\t\t\tbusinessId.parentNode.querySelector(\n\t\t\t\t'.is-business-or-vat-id-description'\n\t\t\t);\n\t\tlet businessIdOrVatIdMessageContainerVat =\n\t\t\tvatId.parentNode.querySelector(\n\t\t\t\t'.is-business-or-vat-id-description'\n\t\t\t);\n\n\t\tswitch ( country ) {\n\t\t\tcase 'de-de':\n\t\t\tcase 'deu':\n\t\t\t\tbusinessIdRow.style.removeProperty( 'display' );\n\t\t\t\tpressLawCheckboxRow.style.removeProperty( 'display' );\n\t\t\t\tpressLawInputRow.style.removeProperty( 'display' );\n\n\t\t\t\tbusinessIdOrVatIdMessageContainerBusiness = toggleDescription(\n\t\t\t\t\t'show',\n\t\t\t\t\tbusinessIdOrVatIdMessageContainerBusiness,\n\t\t\t\t\t'is-business-or-vat-id-description',\n\t\t\t\t\timprintL10n.businessIdOrVatIdMessage,\n\t\t\t\t\tbusinessId.parentNode\n\t\t\t\t);\n\t\t\t\tbusinessIdOrVatIdMessageContainerVat = toggleDescription(\n\t\t\t\t\t'show',\n\t\t\t\t\tbusinessIdOrVatIdMessageContainerBusiness,\n\t\t\t\t\t'is-business-or-vat-id-description',\n\t\t\t\t\timprintL10n.businessIdOrVatIdMessage,\n\t\t\t\t\tvatId.parentNode\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbusinessIdRow.style.display = 'none';\n\t\t\t\tpressLawCheckboxRow.style.display = 'none';\n\t\t\t\tpressLawInputRow.style.display = 'none';\n\n\t\t\t\ttoggleDescription(\n\t\t\t\t\t'hide',\n\t\t\t\t\tbusinessIdOrVatIdMessageContainerBusiness\n\t\t\t\t);\n\t\t\t\ttoggleDescription(\n\t\t\t\t\t'hide',\n\t\t\t\t\tbusinessIdOrVatIdMessageContainerVat\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Toggle field descriptions.\n\t *\n\t * @param {string}       mode          The mode to perform, 'show' or 'hide'\n\t * @param {?HTMLElement} element       Element to show/hide/create\n\t * @param {?string}      identifier    Identifier to add as class\n\t * @param {?string}      text          Text to add to the element\n\t * @param {?HTMLElement} parentElement Parent element to add the element to\n\t * @return {HTMLElement|void} The created element or nothing\n\t */\n\tfunction toggleDescription(\n\t\tmode,\n\t\telement,\n\t\tidentifier,\n\t\ttext,\n\t\tparentElement\n\t) {\n\t\tif ( mode === 'show' && ! element ) {\n\t\t\telement = document.createElement( 'p' );\n\t\t\telement.classList.add(\n\t\t\t\t'description',\n\t\t\t\t'impressum__description',\n\t\t\t\tidentifier\n\t\t\t);\n\t\t\telement.textContent = text;\n\t\t\tparentElement.appendChild( element );\n\n\t\t\treturn element;\n\t\t} else if ( mode === 'hide' ) {\n\t\t\telement.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Toggle the notification about using the Pro version.\n\t *\n\t * @param {boolean} hideMessage True if message should be hidden, false otherwise\n\t * @param {Element} container   The container element that should contain the notification\n\t * @param {string}  text        The text the notification should contain\n\t */\n\tfunction toggleMessage( hideMessage, container, text ) {\n\t\tvar noticeElement = container.nextElementSibling;\n\n\t\tif (\n\t\t\t! hideMessage &&\n\t\t\t( noticeElement === null ||\n\t\t\t\t! noticeElement.classList.contains( 'notice' ) )\n\t\t) {\n\t\t\tvar message = document.createElement( 'p' );\n\t\t\tvar notice = document.createElement( 'div' );\n\n\t\t\tmessage.innerText = text;\n\t\t\tnotice.style.maxWidth = '436px';\n\t\t\tnotice.classList.add( 'notice' );\n\t\t\tnotice.classList.add( 'inline' ); // prevent moving the notice below the headline\n\t\t\tnotice.classList.add( 'notice-warning' );\n\t\t\tnotice.appendChild( message );\n\t\t\tcontainer.after( notice );\n\t\t} else if ( hideMessage ) {\n\t\t\tif (\n\t\t\t\tnoticeElement !== null &&\n\t\t\t\tnoticeElement.classList.contains( 'notice' )\n\t\t\t) {\n\t\t\t\tnoticeElement.remove();\n\t\t\t}\n\t\t}\n\t}\n} );\n\nif ( ! Array.prototype.inArray ) {\n\t/**\n\t * Check if an array contains a specified value.\n\t *\n\t * @param {string} needle Needle to check\n\t * @return {boolean} Whether the array contains the vails\n\t */\n\tArray.prototype.inArray = function ( needle ) {\n\t\tvar length = this.length;\n\n\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t\tif ( this[ i ] === needle ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\n/**\n * Polyfill for Child.after()\n *\n * @see https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/after()/after().md\n * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/after\n *\n * @param {Array} arr Array\n */\n( function ( arr ) {\n\tarr.forEach( function ( item ) {\n\t\tif ( item.hasOwnProperty( 'after' ) ) {\n\t\t\treturn;\n\t\t}\n\t\tObject.defineProperty( item, 'after', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\twritable: true,\n\t\t\tvalue: function after() {\n\t\t\t\tvar argArr = Array.prototype.slice.call( arguments ),\n\t\t\t\t\tdocFrag = document.createDocumentFragment();\n\n\t\t\t\targArr.forEach( function ( argItem ) {\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tvar isNode = argItem instanceof Node;\n\t\t\t\t\tdocFrag.appendChild(\n\t\t\t\t\t\tisNode\n\t\t\t\t\t\t\t? argItem\n\t\t\t\t\t\t\t: document.createTextNode( String( argItem ) )\n\t\t\t\t\t);\n\t\t\t\t} );\n\n\t\t\t\tthis.parentNode.insertBefore(\n\t\t\t\t\tdocFrag,\n\t\t\t\t\tthis.nextElementSibling\n\t\t\t\t);\n\t\t\t},\n\t\t} );\n\t} );\n\t// eslint-disable-next-line no-undef\n} )( [ Element.prototype, CharacterData.prototype, DocumentType.prototype ] );\n\n/**\n * Polyfill for ChildNode.remove()\n *\n * @see https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\n * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n *\n * @param {Array} arr Array\n */\n( function ( arr ) {\n\tarr.forEach( function ( item ) {\n\t\tif ( item.hasOwnProperty( 'remove' ) ) {\n\t\t\treturn;\n\t\t}\n\t\tObject.defineProperty( item, 'remove', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\twritable: true,\n\t\t\tvalue: function remove() {\n\t\t\t\tif ( this.parentNode !== null ) {\n\t\t\t\t\tthis.parentNode.removeChild( this );\n\t\t\t\t}\n\t\t\t},\n\t\t} );\n\t} );\n\t// eslint-disable-next-line no-undef\n} )( [ Element.prototype, CharacterData.prototype, DocumentType.prototype ] );\n\n/**\n * Debounce a function.\n *\n * @param {Function} func    Function to debounce\n * @param {number}   timeout Debouncing timeout\n * @return {Function} return value\n */\nfunction debounce( func, timeout = 300 ) {\n\tlet timer;\n\n\treturn ( ...args ) => {\n\t\tclearTimeout( timer );\n\n\t\ttimer = setTimeout( () => {\n\t\t\tfunc.apply( this, args );\n\t\t}, timeout );\n\t};\n}\n"],"names":["fieldsToCheck","fieldDependencies","contact_form_page","phone","debounce","func","timeout","timer","args","clearTimeout","setTimeout","apply","this","document","addEventListener","businessId","getElementById","businessIdRow","querySelector","message","countrySelect","legalEntitySelect","pressLawCheckbox","pressLawCheckboxRow","pressLawInputRow","vatId","i","length","checkFieldLength","field","fieldName","toLowerCase","replace","group","toUpperCase","imprintL10n","forEach","eventName","event","hideMessage","value","placeholder","dependenciesMet","isCurrentMet","dependency","toggleMessage","checkFieldValueDependencies","checkFieldValue","currentTarget","toggleFieldsByCountry","country","legalEntity","businessIdOrVatIdMessageContainerBusiness","parentNode","businessIdOrVatIdMessageContainerVat","style","removeProperty","toggleDescription","businessIdOrVatIdMessage","display","mode","element","identifier","text","parentElement","createElement","classList","add","textContent","appendChild","remove","container","noticeElement","nextElementSibling","contains","notice","innerText","maxWidth","after","legalEntityErrorMessage","undefined","checked","removeAttribute","RegExp","test","target","businessIdErrorMessage","vatIdErrorMessage","Array","prototype","inArray","needle","Element","CharacterData","DocumentType","item","hasOwnProperty","Object","defineProperty","configurable","enumerable","writable","argArr","slice","call","arguments","docFrag","createDocumentFragment","argItem","isNode","Node","createTextNode","String","insertBefore","removeChild"],"sourceRoot":""}